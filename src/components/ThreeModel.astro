<script>
    import * as THREE from 'three';

    let scene, camera, renderer, cube, cube2, cube3, cube4;

    // Crear escena
    scene = new THREE.Scene();

    // Crear cámara
    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    camera.position.z = 5;

    // Crear renderer
    renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);
    renderer.setClearColor(0xffffff, 0); // Color de fondo blanco y transparente
    document.body.appendChild(renderer.domElement);

    scene.background = new THREE.Color(0xa1b2c3);
    //scene.fog = new THREE.Fog(0x76456c, 0.1, 8);

    var loader2 = new THREE.TextureLoader();
    loader2.load('../../public/img/fondo3d_02.jpg', function(texture) {
    scene.background = texture
    });

    // Cargar la textura de fondo
    const loader = new THREE.TextureLoader();

    // Cargar la textura del cubo
    loader.load('../../public/img/astro.jpg', (texture) => {
    // Crear geometría del cubo
    const geometry = new THREE.BoxGeometry(1, 1, 1);

    // Crear el material del cubo y asignar la textura
    const material = new THREE.MeshBasicMaterial({ map: texture });
    // Crear el cubo
    cube = new THREE.Mesh(geometry, material);
    // Ajustar la posición del cubo
    cube.position.set(-4.8, 2, 0); // Ajusta según sea necesario
    cube.scale.set(0.8, 0.8, 0.8);
    scene.add(cube);

    // Iniciar la animación
    animate();
    });

    // CUBO 2
    loader.load('../../public/img/python.png', (texture) => {
    // Crear geometría del cubo
    const geometry = new THREE.BoxGeometry(1, 1, 1);

    // Crear el material del cubo y asignar la textura
    const material = new THREE.MeshBasicMaterial({ map: texture });
    // Crear el cubo
    cube2 = new THREE.Mesh(geometry, material);
    // Ajustar la posición del cubo
    cube2.position.set(-1.5, 2, 0); // Ajusta según sea necesario
    cube2.scale.set(0.8, 0.8, 0.8);
    scene.add(cube2);

    // Iniciar la animación
    animate();
    });

    // CUBO 3
    loader.load('../../public/img/rust.jpg', (texture) => {
    // Crear geometría del cubo
    const geometry = new THREE.BoxGeometry(1, 1, 1);

    // Crear el material del cubo y asignar la textura
    const material = new THREE.MeshBasicMaterial({ map: texture });
    // Crear el cubo
    cube3 = new THREE.Mesh(geometry, material);
    // Ajustar la posición del cubo
    cube3.position.set(1.5, 2, 0); // Ajusta según sea necesario
    cube3.scale.set(0.8, 0.8, 0.8);
    scene.add(cube3);

    // Iniciar la animación
    animate();
    });

    // CUBO 4
    loader.load('../../public/img/solidity.png', (texture) => {
    // Crear geometría del cubo
    const geometry = new THREE.BoxGeometry(1, 1, 1);

    // Crear el material del cubo y asignar la textura
    const material = new THREE.MeshBasicMaterial({ map: texture });
    // Crear el cubo
    cube4 = new THREE.Mesh(geometry, material);
    // Ajustar la posición del cubo
    cube4.position.set(4.5, 2, 0); // Ajusta según sea necesario
    cube4.scale.set(0.8, 0.8, 0.8);
    scene.add(cube4);

    // Iniciar la animación
    animate();
    });

    // Animación
    const animate = function () {
    requestAnimationFrame(animate);

    cube.rotation.x += 0.002;
    cube.rotation.y += 0.002;
    cube2.rotation.x += 0.002;
    cube2.rotation.y += 0.002;
    cube3.rotation.x += 0.002;
    cube3.rotation.y += 0.002;
    cube4.rotation.x += 0.002;
    cube4.rotation.y += 0.002;

    renderer.render(scene, camera);
    };

    // Manejo del cambio de tamaño de la ventana
    window.addEventListener('resize', () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
    });

    // Iniciar la animación al cargar la textura
    animate();




</script>

